#name
name: Deploy G et al app to Azure

#trigger
on:
  push:
    branches:
      - main

# the actual actions
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set Up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, json, curl, pdo_mysql, bcmath, zip, gd, intl


      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
         node-version: '18'

      - name: Set Laravel Environment Variables in Azure
        run: |
          az webapp config appsettings set --resource-group laravelResourceGroup \
            --name web-laravel \
            --settings \
              APP_ENV=development \
              APP_DEBUG=true \
              APP_KEY=${{ secrets.APP_KEY }} \
              APP_URL=https://web-laravel.azurewebsites.net/ \
              APP_MAINTENANCE_DRIVER=file \
              APP_LOCALE=en \
              APP_FALLBACK_LOCALE=en \
              APP_FAKER_LOCALE=en_US \
              PHP_CLI_SERVER_WORKERS=4  \
              BCRYPT_ROUNDS=12 \
              LOG_CHANNEL=stack \
              LOG_STACK=single \
              LOG_DEPRECATIONS_CHANNEL=null \
              LOG_LEVEL=debug \
              BROADCAST_CONNECTION=ably \
              FILESYSTEM_DISK=local \
              QUEUE_CONNECTION=database \
              AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }} \
              AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }} \
              AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} \
              CACHE_STORE=database \
              CACHE_PREFIX= \
              DB_CONNECTION=mysql \
              DB_HOST=mysql-laravel.privatelink.mysql.database.azure.com \
              DB_PORT=3306 \
              DB_DATABASE=laravel_db \
              DB_USERNAME=${{ secrets.DB_USERNAME }} \
              DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              MYSQL_ATTR_SSL_CA='--ssl-ca=/etc/ssl/certs/DigiCert_Global_Root_CA.pem' \
              BROADCAST_CONNECTION=ably \
              QUEUE_CONNECTION=database \
              SESSION_DRIVER=database \
              SESSION_LIFETIME=120 \
              SESSION_ENCRYPT=false \
              SESSION_PATH=/ \
              SESSION_DOMAIN=null \
              FILESYSTEM_DISK=local \
              AZURE_STORAGE_NAME=${{ secrets.AZURE_STORAGE_NAME }} \
              AZURE_STORAGE_KEY=${{ secrets.AZURE_STORAGE_KEY }} \
              AZURE_CONTAINER=laravel-files \
              ABLY_KEY=${{ secrets.ABLY_KEY }} \



      # - name: Test MySQL Connection
      #   run: |
      #         mysql -h mysql-laravel.mysql.database.azure.com -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} -e "SHOW DATABASES;"


      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: web-laravel
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      # - name: Install composer Dependencies
      #   run: |
      #     composer install --optimize-autoloader

      # - name: Clear environment cache
      #   run: |
      #      php artisan cache:clear

      # - name: Debug database config
      #   run: |
      #      php artisan config:show database

      # - name: Run Migrations
      #   run: |
      #     php artisan migrate --force

      # - name: Clear Cache
      #   run: |
      #     composer install --optimize-autoloader
      #     php artisan cache:clear
      #     php artisan config:clear
      #     php artisan storage:link

      # - name: Install npm Dependencies
      #   run: |
      #     npm install
      #     npm run build --if-present

